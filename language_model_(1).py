# -*- coding: utf-8 -*-
"""language_model (1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gT1OZASd-uTKk0HkPjpRb4Z0kT3OJWEp
"""

from google.colab import drive
drive.mount('/content/drive')

from fastai.text import *

path = "/content/drive/My Drive/DATA-475/imdb"

# create TextLMDataBunch using the csv in path
#     remember to specify the text column
data_lm = TextLMDataBunch.from_csv(
    path,
    "train.csv",
    text_cols="review"
)

# create TextClasDataBunch using the csv in path
#     remember to specify the text/label column
#     specify test dataset, vocab, and bs
data_clas = TextClasDataBunch.from_csv(
    path,
    "train.csv",
    test="test.csv",
    text_cols="review",
    label_cols="sentiment",
    vocab=data_lm.train_ds.vocab,
    bs=32,
)

# create language model learner with AWD_LSTM architecture and drop_mult of 0.5
lm_learner = language_model_learner(data_lm, arch=AWD_LSTM, drop_mult=.5)

# find a learing rate
lm_learner.lr_find()
lm_learner.recorder.plot(suggestion=True)

# fit one cycle
lr = lm_learner.recorder.min_grad_lr
lm_learner.fit_one_cycle(2, lr)

# save the encoder
lm_learner.save_encoder("model")

lm_learner.predict("this movie talks about Canadian", n_words=20)

clas_learner = text_classifier_learner(data_clas, arch=AWD_LSTM, drop_mult=0.5)
clas_learner.load_encoder("model")

# tune the text_classifier_learner to accpetable accuracy (>80%)
clas_learner.lr_find()
clas_learner.recorder.plot(suggestion=True)
# lr = clas_learner.recorder.min_grad_lr
# clas_learner.fit_one_cycle(4, lr)

lr = clas_learner.recorder.min_grad_lr
clas_learner.fit_one_cycle(4, lr)

clas_learner.predict("This is a horrible movie")

clas_learner.predict("This is a great movie,")

# Check the label mapping
# suppose it returns {'negative': 0, 'positive': 1}
data_clas.train_ds.y.c2i

import pandas as pd


df = pd.read_csv(path+"/test.csv")
y_true = tensor(df["sentiment"]=="positive")

y_true

interp = TextClassificationInterpretation.from_learner(
    clas_learner, 
    ds_type=DatasetType.Test
)
interp.y_true = tensor(df["sentiment"]=="positive")
interp.plot_confusion_matrix()

from fastai.metrics import accuracy

accuracy(interp.preds, interp.y_true)